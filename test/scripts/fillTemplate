#!/usr/bin/perl -w

use strict;

die "Usage: fillTemplate templateFile\n" if @ARGV != 1;

my $templateFile  = $ARGV[0];
die "The file \"$templateFile\" does not exist\n" unless -e $templateFile;

my %symbolNameToValue;
$symbolNameToValue{"LAUNCHER_BASE_PORT"} = 12222;
$symbolNameToValue{"SOAP_BASE_PORT"} = 65432;
$symbolNameToValue{"I2O_BASE_PORT"} = 54320;
$symbolNameToValue{"RUB_TESTER_HOME"} = $ENV{"RUB_TESTER_HOME"};
$symbolNameToValue{"XDAQ_PLATFORM"} = $ENV{"XDAQ_PLATFORM"};
my $symbolMap = $ENV{"TESTS_SYMBOL_MAP"};
my $hostCount = 0;

die "The file \"$symbolMap\" does not exist\n" unless -e $symbolMap;

my $hostname=lc(`hostname -f`);
chomp $hostname;

open SYMBOL_MAP_FILE, "<$symbolMap";
while(<SYMBOL_MAP_FILE>) {
  chomp;
  if(m/^([A-Za-z0-9_]+)\s+([A-Za-z0-9_.\-\/:][ ()A-Za-z0-9_.\-\/:]+)/) {
    my $symbolName  = $1;
    my $symbolValue = $2;
    $symbolValue =~ s/localhost/$hostname/;
    $symbolNameToValue{$symbolName} = $symbolValue;

    if($symbolName =~ /^([A-Za-z0-9_]+)SOAP_HOST_NAME/) {
        my $hostType = $1;
        $symbolNameToValue{$hostType . "LAUNCHER_PORT"} = $symbolNameToValue{"LAUNCHER_BASE_PORT"} + $hostCount;
        $symbolNameToValue{$hostType . "SOAP_PORT"} = $symbolNameToValue{"SOAP_BASE_PORT"} + $hostCount;
        $symbolNameToValue{$hostType . "I2O_PORT"} = $symbolNameToValue{"I2O_BASE_PORT"} + $hostCount;
        $symbolNameToValue{$hostType . "FRL_PORT"} = $symbolNameToValue{"FRL_BASE_PORT"} + $hostCount;
        ++$hostCount;
    }
  }
}
close SYMBOL_MAP_FILE;

sub printSymbolMap {
  foreach my $symbolName (sort keys %symbolNameToValue) {
    my $symbolValue = $symbolNameToValue{$symbolName};
    print "$symbolName = $symbolValue\n";
  }
  exit;
}

#&printSymbolMap;

open TEMPLATE_FILE, "<$templateFile";
while(<TEMPLATE_FILE>) {
  foreach my $symbolName (sort keys %symbolNameToValue) {
    my $symbolValue = $symbolNameToValue{$symbolName};
    s/$symbolName/$symbolValue/g;
  }
  print;
}
close TEMPLATE_FILE;
